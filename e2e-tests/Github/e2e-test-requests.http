### Open pull request
POST {{EndpointHost}}/github-webhook
Content-Type: application/json

< ./test-payloads/PR-opened-test-payload.json

> {%
    client.test("Pull request opening should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Add reviewer
POST {{EndpointHost}}/github-webhook
Content-Type: application/json

< ./test-payloads/PR-review-requested-test-payload.json

> {%
    client.test("Update of reviewers in open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Remove reviewer
POST {{EndpointHost}}/github-webhook
Content-Type: application/json

< ./test-payloads/PR-review-request-removed-test-payload.json

> {%
    client.test("Update of reviewers in open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}


### Merge pull request
POST {{EndpointHost}}/github-webhook
Content-Type: application/json

< ./test-payloads/PR-merged-test-payload.json

> {%
    client.test("Pull request merge should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Invalid payload
POST {{EndpointHost}}/github-webhook
Content-Type: application/json

{
  "eventKey": "invalid-payload"
}

> {%
    client.test("Invalid payload sending should lead to error", function() {
        console.log(response.body)
        client.assert(response.body.indexOf('"undefined" action key is unknown') !== -1);
        client.assert(response.status === 500)
    });
%}