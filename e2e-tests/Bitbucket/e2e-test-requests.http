### Open pull request
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-opened-test-payload.json

> {%
    client.test("Pull request opening should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Add comment
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-comment-added-test-payload.json

> {%
    client.test("Adding comment to open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Edit comment
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-comment-edited-test-payload.json

> {%
    client.test("Editing comment to open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Delete comment
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-comment-deleted-test-payload.json

> {%
    client.test("Deletion of comment to open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Modify PR
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-modified-test-payload.json

> {%
    client.test("Pull Request change of open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });

%}

### Reviewer requested changes
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-needs-work-test-payload.json

> {%
    client.test("Change request to open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Reviewers list updated
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-reviewer-updated-test-payload.json

> {%
    client.test("Update of reviewers in open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Add reply to the comment
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-comment-replied-test-payload.json

> {%
    client.test("Reply to the PR comment should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Add commit
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-from-ref-updated-test-payload.json

> {%
    client.test("Adding commit to open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Reviewer approved pull request
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-approved-test-payload.json

> {%
    client.test("Approve of open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Fetch channel info with API call
GET {{EndpointHost}}/slack-channel?pullRequestId={{PullRequestId}}&repositorySlug={{RepositoryName}}&projectKey={{ProjectName}}
Content-Type: application/json

> {%
    client.test("Fetching of channel info should be successful for the active channel", function() {
        client.assert(response.status === 200)
    });
%}



### Merge pull request
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-merged-test-payload.json

> {%
    client.test("Merge of open Pull request should be successful", function() {
        client.assert(response.status === 200);
    });
%}

### Invalid payload
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

{
  "eventKey": "invalid-payload"
}

> {%
    client.test("Invalid payload sending should lead to error", function() {
        client.assert(response.body.indexOf('"invalid-payload" event key is unknown') !== -1);
        client.assert(response.status === 500)
    });
%}

### Add comment to the already closed pull request
POST {{EndpointHost}}/bitbucket-webhook
Content-Type: application/json

< ./test-payloads/PR-comment-added-test-payload.json

> {%
    client.test("Addition of the comment to closed PR leads to error since channel is archived", function() {
        console.log(response.body)
        client.assert(response.body.indexOf('An API error occurred: name_taken') !== -1);
        client.assert(response.status === 500)
    });
%}

### Fetch channel info with API call
GET {{EndpointHost}}/slack-channel?pullRequestId={{PullRequestId}}&repositorySlug={{RepositoryName}}&projectKey={{ProjectName}}
Content-Type: application/json

> {%
    client.test("Fetching of channel info should return 404 for the archived channel", function() {
        client.assert(response.status === 404)
    });
%}
